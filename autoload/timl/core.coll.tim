(in-ns 'timl#core)

(defn conj [xs ...] (append xs ...))

(defn sorter [>]
  (fn [x y]
    (if (> x y)
      1
      (if (> y x)
        -1
        0))))

(defn sort [xs ...]
  (if ...
    (f:sort (f:copy xs) (sorter (first ...)) {})
    (f:sort (f:copy xs))))

(defn get-in [m ks] (reduce get m ks))
